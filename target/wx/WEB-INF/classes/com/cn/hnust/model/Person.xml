<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.IPersonDao" >
  <resultMap id="BaseResultMap" type="com.cn.hnust.model.Person" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="personName" property="personName" jdbcType="VARCHAR" />
    <result column="nickName" property="nickName" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, personName, nickName
  </sql>
  
  <insert id="add" parameterType="com.cn.hnust.model.Person">
		insert into t_person (personName, nickName) values
		(#{personName}, #{nickName})
  </insert>
  
  <select id="load" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_person
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from t_person
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <update id="update" parameterType="com.cn.hnust.model.Person" >
    update t_person
    set personName = #{personName,jdbcType=VARCHAR},
      nickName = #{nickName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="find" resultType="Person" parameterType="Map">
		select * from t_person
		<where>
			<if test="_parameter!= null">personName like #{paramMap.name,jdbcType=VARCHAR} or nickName like #{paramMap.name,jdbcType=VARCHAR}</if>
		</where>
		<if test="_parameter != null">order by ${paramMap.sort,jdbcType=VARCHAR} 
			<if test="order!= null">
				${order,jdbcType=VARCHAR}
			</if>
		</if>
		limit #{offSet,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
	</select>
	
	<select id="find_count" parameterType="map" resultType="int">
		select count(*) from t_person 
		<if test="name !=null"> where (personName like #{name} or nickName like #{name})</if>
	</select>
</mapper>